// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                String   @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  noteOrder     String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  notes Note[]
  tags  Tag[]
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@unique([identifier, token])
}

model Note {
  id          String       @default(cuid()) @id
  name        String
  noteType    String       @default("TEXT")
  content     String
  color       String
  pinned      Boolean
  createdAt   DateTime     @default(now())
  tags        Tag[]
  checkPoints CheckPoint[]
  image       String?
  user        User?        @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String?
}

model Tag {
  id        String   @default(cuid()) @id
  name      String
  createdAt DateTime @default(now())
  notes     Note[]
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
}

model CheckPoint {
  id      String  @default(cuid()) @id
  text    String
  checked Boolean
  note    Note?   @relation(fields: [noteId], references: [id], onDelete: Cascade)
  noteId  String?
}
